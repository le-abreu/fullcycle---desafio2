{
	"info": {
		"_postman_id": "0a48a5e0-b196-41ee-877c-b05c050eaf86",
		"name": "Fullcycle - Desafio2",
		"description": "# **Nginx com Node.js**\n\n  \nNesse desafio você colocará em prática o que aprendemos em relação a utilização do nginx como proxy reverso. A idéia principal é que quando um usuário acesse o nginx, o mesmo fará uma chamada em nossa aplicação node.js. Essa aplicação por sua vez adicionará um registro em nosso banco de dados mysql, cadastrando um nome na tabela people.\n\nO retorno da aplicação node.js para o nginx deverá ser:\n\n# `   # Full Cycle Rocks!   `\n\n\\- Lista de nomes cadastrada no banco de dados.\n\nGere o docker-compose de uma forma que basta apenas rodarmos: docker-compose up -d que tudo deverá estar funcionando e disponível na porta: 8080.\n\nSuba tudo em um repositório e faça a entrega.\n\n\\* A linguagem de programação para este desafio é **Node/JavaScript.**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1865918"
	},
	"item": [
		{
			"name": "desafio2 - app-node",
			"item": [
				{
					"name": "insert people",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"XXXX\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/insert",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"insert"
							]
						},
						"description": "Serviço de cadastro de people envia name"
					},
					"response": []
				},
				{
					"name": "list people",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Leandro\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								""
							]
						},
						"description": "Serviço lista people cadastrados na base"
					},
					"response": []
				}
			]
		}
	]
}